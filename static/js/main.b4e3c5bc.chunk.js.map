{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","resources/img/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_apiOffsetValue","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","data","results","map","_transformCharacter","getMoreCharacters","toString","getCharacterById","id","name","description","thumbnail","urls","comics","checkDescription","slice","thumbnailCoverStatus","path","includes","extension","homepage","wiki","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","gif","alt","RandomChar","state","char","loading","error","marvelService","onCharLoaded","setState","updateChar","Math","floor","random","then","catch","e","toggleCharacterOnClick","render","currentStatus","onLoaded","onClick","mjolnir","this","prevProps","prevState","props","characterID","Component","imgClassName","CharList","onCharListLoaded","newArray","ended","length","charArr","concat","charEnded","updateCharList","onLoadingMore","pages","listItemsRefs","setItemRef","ref","push","isActive","i","forEach","item","classList","remove","add","focus","renderCharListItems","onCharSelected","onKeyPress","key","tabIndex","statusLoading","statusLoadMore","disabled","Skeleton","CharInfo","View","splice","ErrorBoundary","children","errorInfo","App","decoration","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4e3c5bc.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","\nclass MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=bd35b0eefb6ce288f155f735ed56a8d6';\n    _apiOffsetValue = '111';\n\n    getResource = async (url) => {\n        let res = await fetch(url)\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async () => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${this._apiOffsetValue}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getMoreCharacters = async () => {\n        this._apiOffsetValue = (+this._apiOffsetValue + 9).toString();\n        return await this.getAllCharacters();\n    }\n\n    getCharacterById = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = ({name, description, thumbnail, urls, id, comics}) => {\n        const onEmptyMessage = 'Sorry, description for this character was not added yet';\n        let checkDescription = !description ? onEmptyMessage : `${description.slice(0, 211)}…`;\n        let thumbnailCoverStatus = thumbnail.path.includes('image_not_available') ?\n            ' _not-found' : '';\n\n        return {\n            name: name,\n            description: checkDescription,\n            thumbnail: `${thumbnail.path}.${thumbnail.extension} `,\n            homepage: urls[0].url,\n            wiki: urls[1].url,\n            thumbnailCoverStatus: thumbnailCoverStatus, \n            id: id,\n            comics: comics.items.slice(0, 10)\n        }\n    }\n}\n\nexport default MarvelService;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import gif from '../../resources/img/error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', \n        objectFit: 'contain', margin: '0 auto'}} src={gif} alt=\"Eror\" />\n    )\n}\n\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nimport './randomChar.scss';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.characterID !== prevProps.characterID) {\n            this.updateChar();\n            this.setState({loading: true, error: false});\n        }\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false, error: false});\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        \n        this.marvelService\n            .getCharacterById(id)\n            .then(this.onCharLoaded)\n            .catch((e) => this.setState({loading: false, error: true}))\n    }\n\n    toggleCharacterOnClick = () => {\n        this.setState({loading: true, error: false});\n        this.updateChar();\n    }\n    \n    render = () => {\n        const {char, loading, error} = this.state;\n\n        let statusError = error ? ErrorMessage : null;\n        let statusLoading = loading ? Spinner : null;\n        let currentStatus = statusError || statusLoading || onLoaded;\n\n        return (\n            <div className=\"randomchar\">\n                {currentStatus(char)}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button\n                        className=\"button button__main\"\n                        onClick={this.toggleCharacterOnClick}\n                    >\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst onLoaded = ({name, description, thumbnail, homepage, wiki, thumbnailCoverStatus}) => {\n    let imgClassName = `randomchar__img${thumbnailCoverStatus}`\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail}  alt=\"Random character\" className={imgClassName}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            charArr: [],\n            loading: true,\n            error: false,\n            pages: 0,\n            charEnded: false\n        }\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateCharList();\n    }\n\n    onCharListLoaded = (newArray) => {\n        let ended = newArray.length < 9 ? true : false;\n\n        this.setState(({charArr}) => ({\n            charArr: charArr.concat(newArray),\n            loading: false,\n            error: false,\n            charEnded: ended\n        }))\n    }\n    \n    updateCharList = () => {\n        this.marvelService\n            .getAllCharacters()\n            .then(charArr => this.onCharListLoaded(charArr))\n            .catch(e => this.setState({loading: false, error: true}))\n    }\n\n    onLoadingMore = () => {\n        this.setState({\n            loading: true,\n            error: false,\n            pages: this.state.pages + 1\n        })\n        this.marvelService\n            .getMoreCharacters()\n            .then(charArr => this.onCharListLoaded(charArr))\n            .catch(e => this.setState({loading: false, error: true}))\n    }\n\n    listItemsRefs = [];\n    setItemRef = (ref) => {\n        this.listItemsRefs.push(ref);\n    }\n\n    isActive = (i) => {\n        this.listItemsRefs.forEach(item => {\n            item.classList.remove('char__item_selected')\n        });\n        this.listItemsRefs[i].classList.add('char__item_selected');\n        this.listItemsRefs[i].focus();\n    }\n\n    renderCharListItems = (charArr) => {\n        const items = charArr.map((item, i) => {\n            const {name, thumbnail, thumbnailCoverStatus, id} = item;\n            return (\n                <li className=\"char__item\" \n                    key={id}\n                    ref={this.setItemRef}\n                    onClick={() => {\n                        this.props.onCharSelected(id);\n                        this.isActive(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter' || e.key === ' ') {\n                            this.isActive(i);\n                            this.props.onCharSelected(id);\n                        }\n                    }}\n                    tabIndex={0}\n                >\n                    <img className={thumbnailCoverStatus} src={thumbnail} alt={name}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    render = () => {\n        const {charArr, loading, error, pages, charEnded} = this.state;\n        let statusLoading = loading && pages === 0 ? Spinner : null;\n        let statusLoadMore = loading && pages > 0 ? <Spinner/> : null;\n        let statusError = error ? ErrorMessage : null;\n        let currentStatus = statusError || statusLoading || this.renderCharListItems\n        return (\n            <div className=\"char__list\">\n                {currentStatus(charArr)}\n                {statusLoadMore}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={loading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={this.onLoadingMore} \n                >\n                        <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\nexport default CharList;\n\n/* <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item char__item_selected\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li> */","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            char: null,\n            loading: false,\n            error: false\n        }\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.characterID !== prevProps.characterID) {\n            this.updateChar();\n            // this.setState({loading: true, error: false});\n        }\n    }\n\n    updateChar = () => {\n        const {characterID} = this.props;\n        if (!characterID) {\n            return;\n        }\n        this.setState({loading: true, error: false});\n        this.marvelService\n            .getCharacterById(characterID)\n            .then(char =>{this.setState({char: char, loading: false, error: false})})\n            .catch(e => this.setState({error: true, loading: false}))\n    }\n\n    View = ({name, description, thumbnail, homepage, wiki, thumbnailCoverStatus, comics}) => {\n        comics.splice(10);\n        return (\n        <>\n        <div className=\"char__basics\">\n            <img className={thumbnailCoverStatus} src={thumbnail} alt={name}/>\n            <div>\n                <div className=\"char__info-name\">{name}</div>\n                <div className=\"char__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div className=\"char__descr\">\n            {description}\n        </div>\n        <div className=\"char__comics\">Comics:</div>\n        <ul className=\"char__comics-list\">\n            {comics.length < 1 ? 'There are no comics about this character yet' \n            : comics.map((item, i) => (\n                <li key={i} className=\"char__comics-item\">\n                    {item.name}\n                </li>\n            ))}\n        </ul>\n        </>\n        )\n    }\n\n    render = () => {\n        const {char, loading, error} = this.state;\n        let statusSkeleton = char === null && !loading ? Skeleton : null;\n        let statusLoading = loading ? Spinner : null;\n        let statusError = error ? ErrorMessage : null;\n        let currentStatus = statusError || statusSkeleton || statusLoading ||\n            this.View;\n\n        return (\n            <div className=\"char__info\">\n                {currentStatus(char)}\n            </div>\n        )\n    }\n    \n}\n\nCharInfo.propTypes = {\n    characterID: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\n\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({error: true})\n    }\n\n    render = () => {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state = {\n        characterID: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({characterID: id})\n    }\n\n    render = () => {\n        const {characterID} = this.state;\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                    <ErrorBoundary>\n                        <CharList\n                            onCharSelected={this.onCharSelected}\n                        />\n                    </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo\n                                characterID={characterID}    \n                            />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport MarvelService from './services/MarvelService';\n\nimport './style/style.scss';\n\n// let marvelService = new MarvelService()\n//     marvelService.getAllCharacters().then(data => console.log(data));\n//     marvelService.getCharacterById(1010996).then(data => console.log(data));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}