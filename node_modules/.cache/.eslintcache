[{"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/index.js":"1","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/app/App.js":"2","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/appHeader/AppHeader.js":"3","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/randomChar/RandomChar.js":"4","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charInfo/CharInfo.js":"5","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charList/CharList.js":"6","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/services/MarvelService.js":"7","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/spinner/Spinner.js":"8","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/errorMessage/ErrorMessage.js":"9","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/skeleton/Skeleton.js":"10","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/errorBoundary/ErrorBoundary.js":"11","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/hooks/http.hook.js":"12","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/comicsList/ComicsList.js":"13","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/appBanner/AppBanner.js":"14","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/MainPage.js":"15","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/ComicsPage.js":"16","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/index.js":"17","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/404.js":"18","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/SingleComicPage.js":"19","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/searchForm/SearchForm.js":"20","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/SingleCharacterPage.js":"21","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/services/ComicPageService.js":"22"},{"size":295,"mtime":1662672530364,"results":"23","hashOfConfig":"24"},{"size":1297,"mtime":1663507699402,"results":"25","hashOfConfig":"24"},{"size":1058,"mtime":1663508053524,"results":"26","hashOfConfig":"24"},{"size":2876,"mtime":1662294249543,"results":"27","hashOfConfig":"24"},{"size":2835,"mtime":1663189806809,"results":"28","hashOfConfig":"24"},{"size":3674,"mtime":1663328610285,"results":"29","hashOfConfig":"24"},{"size":3432,"mtime":1663691932852,"results":"30","hashOfConfig":"24"},{"size":4552,"mtime":1661695095184,"results":"31","hashOfConfig":"24"},{"size":275,"mtime":1659462874111,"results":"32","hashOfConfig":"24"},{"size":666,"mtime":1652252496000,"results":"33","hashOfConfig":"24"},{"size":461,"mtime":1662025866962,"results":"34","hashOfConfig":"24"},{"size":900,"mtime":1662025863025,"results":"35","hashOfConfig":"24"},{"size":2549,"mtime":1663503781791,"results":"36","hashOfConfig":"24"},{"size":522,"mtime":1652252496000,"results":"37","hashOfConfig":"24"},{"size":1333,"mtime":1663488942457,"results":"38","hashOfConfig":"24"},{"size":375,"mtime":1663189816585,"results":"39","hashOfConfig":"24"},{"size":209,"mtime":1663189809686,"results":"40","hashOfConfig":"24"},{"size":531,"mtime":1662674990097,"results":"41","hashOfConfig":"24"},{"size":2021,"mtime":1663442963518,"results":"42","hashOfConfig":"24"},{"size":2318,"mtime":1663692421694,"results":"43","hashOfConfig":"24"},{"size":448,"mtime":1663506005447,"results":"44","hashOfConfig":"24"},{"size":803,"mtime":1663505881124,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1f4bkeb",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/index.js",[],["94","95"],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/app/App.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/appHeader/AppHeader.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/randomChar/RandomChar.js",["96","97"],"import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nimport './randomChar.scss';\n\nconst RandomChar = (props) => {\n\n    const [char, setChar] = useState({});\n\n    const {loading, error, getCharacterById, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, []);\n\n    useEffect(() => {\n        updateChar()\n    }, [props.characterID]);\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        \n        getCharacterById(id)\n            .then(onCharLoaded)\n            .catch(e =>{})\n    }\n\n    const toggleCharacterOnClick = () => {\n        clearError();\n        updateChar();\n    }\n    \n    let statusError = error ? ErrorMessage : null;\n    let statusLoading = loading ? Spinner : null;\n    let currentStatus = statusError || statusLoading || onLoaded;\n\n    return (\n        <div className=\"randomchar\">\n            {currentStatus(char)}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button\n                    className=\"button button__main\"\n                    onClick={toggleCharacterOnClick}\n                >\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst onLoaded = ({name, description, thumbnail, homepage, wiki, thumbnailCoverStatus}) => {\n    let imgClassName = `randomchar__img${thumbnailCoverStatus}`\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail}  alt=\"Random character\" className={imgClassName}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charInfo/CharInfo.js",["98","99"],"import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacterById, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    useEffect(() => {\n        updateChar();\n    }, [props.characterID])\n\n    const updateChar = () => {\n        const {characterID} = props;\n        if (!characterID) {\n            return;\n        }\n\n        clearError();\n        getCharacterById(characterID)\n            .then(char => {\n                setChar(char);\n            })\n            .catch(e => {})\n    }\n\n    const View = ({name, description, thumbnail, homepage, wiki, thumbnailCoverStatus, comics}) => {\n        comics.splice(10);\n        const comicsId = comics.map(item => {\n            return item.resourceURI.replace(/^.+comics\\//, '');\n        });\n\n        return (\n        <>\n        <div className=\"char__basics\">\n            <img className={thumbnailCoverStatus} src={thumbnail} alt={name}/>\n            <div>\n                <div className=\"char__info-name\">{name}</div>\n                <div className=\"char__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div className=\"char__descr\">\n            {description}\n        </div>\n        <div className=\"char__comics\">Comics:</div>\n        <ul className=\"char__comics-list\">\n            {comics.length < 1 ? 'There are no comics about this character yet' \n            : comics.map((item, i) => (\n                <li key={i} className=\"char__comics-item\">\n                    <Link to={`comics/${comicsId[i]}`}>\n                        {item.name}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n        </>\n        )\n    }\n\n    let statusSkeleton = char === null && !loading ? Skeleton : null;\n    let statusLoading = loading ? Spinner : null;\n    let statusError = error ? ErrorMessage : null;\n    let currentStatus = statusError || statusSkeleton || statusLoading || View;\n\n    return (\n        <div className=\"char__info\">\n            {currentStatus(char)}\n        </div>\n    )\n    \n}\n\nCharInfo.propTypes = {\n    characterID: PropTypes.number\n}\n\nexport default CharInfo;","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charList/CharList.js",["100"],"import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charArr, setCharArr] = useState([]);\n    const [pages, setPages] = useState(0);\n    const [charEnded, setCharEnded] = useState(false);\n    const [offset, setOffset] = useState(111);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onLoadingMore(offset);\n    }, [offset])\n\n    const onCharListLoaded = (newArray) => {\n        let ended = newArray.length < 9 ? true : false;\n\n        setCharArr(charArr => charArr.concat(newArray));\n        setCharEnded(charEnded => ended);\n    }\n\n    const onLoadingMore = (offset) => {\n        setPages(pages => pages + 1);\n        getAllCharacters(offset)\n            .then(charArr => onCharListLoaded(charArr))\n            .catch(e => {})\n    }\n\n    const listItemsRefs = useRef([]);\n\n    const isActive = (i) => {\n        listItemsRefs.current.forEach(item => {\n            item.classList.remove('char__item_selected')\n        });\n        listItemsRefs.current[i].classList.add('char__item_selected');\n        listItemsRefs.current[i].focus();\n    }\n\n    const renderCharListItems = (charArr) => {\n        const items = charArr.map((item, i) => {\n            const {name, thumbnail, thumbnailCoverStatus, id} = item;\n            return (\n                <CSSTransition\n                    key={id}\n                    timeout={500}\n                    classNames=\"char__item\"\n                >\n                    <li className=\"char__item\" \n                        ref={el => listItemsRefs.current[i] = el}\n                        onClick={() => {\n                            props.onCharSelected(id);\n                            isActive(i);\n                        }}\n                        onKeyPress={(e) => {\n                            if (e.key === 'Enter' || e.key === ' ') {\n                                isActive(i);\n                                props.onCharSelected(id);\n                            }\n                        }}\n                        tabIndex={0}\n                    >\n                        <img className={thumbnailCoverStatus} src={thumbnail} alt={name}/>\n                        <div className=\"char__name\">{name}</div>\n                    </li>\n                </CSSTransition>\n            )\n        })\n        return (\n            <ul className=\"char__grid\">\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n    \n    let statusLoading = loading && pages === 0 ? Spinner : null;\n    let statusLoadMore = loading && pages > 0 ? <Spinner/> : null;\n    let statusError = error ? ErrorMessage : null;\n    let currentStatus = statusError || statusLoading || renderCharListItems\n    return (\n        <div className=\"char__list\">\n            {currentStatus(charArr)}\n            {statusLoadMore}\n            <button \n                className=\"button button__main button__long\"\n                disabled={loading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => setOffset(offset => offset + 9)} \n            >\n                    <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/services/MarvelService.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/spinner/Spinner.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/errorMessage/ErrorMessage.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/skeleton/Skeleton.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/errorBoundary/ErrorBoundary.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/hooks/http.hook.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/comicsList/ComicsList.js",["101","102","103"],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/appBanner/AppBanner.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/MainPage.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/ComicsPage.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/index.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/404.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/SingleComicPage.js",["104"],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/searchForm/SearchForm.js",["105","106","107","108"],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/SingleCharacterPage.js",[],"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/services/ComicPageService.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":18,"column":8,"nodeType":"115","endLine":18,"endColumn":10,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"114","line":22,"column":8,"nodeType":"115","endLine":22,"endColumn":27,"suggestions":"117"},{"ruleId":"113","severity":1,"message":"114","line":20,"column":8,"nodeType":"115","endLine":20,"endColumn":10,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"114","line":24,"column":8,"nodeType":"115","endLine":24,"endColumn":27,"suggestions":"119"},{"ruleId":"113","severity":1,"message":"120","line":23,"column":8,"nodeType":"115","endLine":23,"endColumn":16,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":17,"column":42,"nodeType":"124","messageId":"125","endLine":17,"endColumn":54},{"ruleId":"113","severity":1,"message":"120","line":21,"column":8,"nodeType":"115","endLine":21,"endColumn":16,"suggestions":"126"},{"ruleId":"122","severity":1,"message":"127","line":40,"column":33,"nodeType":"124","messageId":"125","endLine":40,"endColumn":37},{"ruleId":"113","severity":1,"message":"128","line":19,"column":8,"nodeType":"115","endLine":19,"endColumn":17,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"130","line":44,"column":11,"nodeType":"124","messageId":"125","endLine":44,"endColumn":24},{"ruleId":"122","severity":1,"message":"131","line":45,"column":11,"nodeType":"124","messageId":"125","endLine":45,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":67,"column":26,"nodeType":"134","messageId":"135","endLine":67,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":67,"column":89,"nodeType":"134","messageId":"135","endLine":67,"endColumn":91},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.","ArrayExpression",["138"],["139"],["140"],["141"],"React Hook useEffect has a missing dependency: 'onLoadingMore'. Either include it or remove the dependency array.",["142"],"no-unused-vars","'getComicById' is assigned a value but never used.","Identifier","unusedVar",["143"],"'urls' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateComic'. Either include it or remove the dependency array.",["144"],"'StatusLoading' is assigned a value but never used.","'StatusError' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"145","fix":"149"},{"desc":"147","fix":"150"},{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [updateChar]",{"range":"156","text":"157"},"Update the dependencies array to be: [props.characterID, updateChar]",{"range":"158","text":"159"},{"range":"160","text":"157"},{"range":"161","text":"159"},"Update the dependencies array to be: [offset, onLoadingMore]",{"range":"162","text":"163"},{"range":"164","text":"163"},"Update the dependencies array to be: [comicId, updateComic]",{"range":"165","text":"166"},[497,499],"[updateChar]",[553,572],"[props.characterID, updateChar]",[563,565],[619,638],[705,713],"[offset, onLoadingMore]",[635,643],[589,598],"[comicId, updateComic]"]