{"ast":null,"code":"var _jsxFileName = \"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charInfo/CharInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharInfo = props => {\n  _s();\n\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getCharacterById,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateChar();\n  }, []);\n  useEffect(() => {\n    updateChar();\n  }, [props.characterID]);\n\n  const updateChar = () => {\n    const {\n      characterID\n    } = props;\n\n    if (!characterID) {\n      return;\n    }\n\n    clearError();\n    getCharacterById(characterID).then(char => {\n      setChar(char);\n    }).catch(e => {});\n  };\n\n  const View = ({\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki,\n    thumbnailCoverStatus,\n    comicName,\n    comicId\n  }) => {\n    comicName.splice(10);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"char__basics\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: thumbnailCoverStatus,\n          src: thumbnail,\n          alt: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"char__info-name\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"char__btns\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: homepage,\n              className: \"button button__main\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inner\",\n                children: \"homepage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: wiki,\n              className: \"button button__secondary\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inner\",\n                children: \"Wiki\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"char__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"char__comics\",\n        children: \"Comics:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"char__comics-list\",\n        children: comics.length < 1 ? 'There are no comics about this character yet' : comics.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `comics/${id}`,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  let statusSkeleton = char === null && !loading ? Skeleton : null;\n  let statusLoading = loading ? Spinner : null;\n  let statusError = error ? ErrorMessage : null;\n  let currentStatus = statusError || statusSkeleton || statusLoading || View;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__info\",\n    children: currentStatus(char)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharInfo, \"uaHufoGxrYhR+H0Axp/57BxuVlU=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = CharInfo;\nCharInfo.propTypes = {\n  characterID: PropTypes.number\n};\nexport default CharInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharInfo\");","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charInfo/CharInfo.js"],"names":["useState","useEffect","Link","PropTypes","useMarvelService","Spinner","ErrorMessage","Skeleton","CharInfo","props","char","setChar","loading","error","getCharacterById","clearError","updateChar","characterID","then","catch","e","View","name","description","thumbnail","homepage","wiki","thumbnailCoverStatus","comicName","comicId","splice","comics","length","map","item","i","id","statusSkeleton","statusLoading","statusError","currentStatus","propTypes","number"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacterById, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    useEffect(() => {\n        updateChar();\n    }, [props.characterID])\n\n    const updateChar = () => {\n        const {characterID} = props;\n        if (!characterID) {\n            return;\n        }\n\n        clearError();\n        getCharacterById(characterID)\n            .then(char => {\n                setChar(char);\n            })\n            .catch(e => {})\n    }\n\n    const View = ({name, description, thumbnail, homepage, wiki, thumbnailCoverStatus, comicName, comicId}) => {\n        comicName.splice(10);\n        return (\n        <>\n        <div className=\"char__basics\">\n            <img className={thumbnailCoverStatus} src={thumbnail} alt={name}/>\n            <div>\n                <div className=\"char__info-name\">{name}</div>\n                <div className=\"char__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div className=\"char__descr\">\n            {description}\n        </div>\n        <div className=\"char__comics\">Comics:</div>\n        <ul className=\"char__comics-list\">\n            {comics.length < 1 ? 'There are no comics about this character yet' \n            : comics.map((item, i) => (\n                <li key={i} className=\"char__comics-item\">\n                    <Link to={`comics/${id}`}>\n                        {item.name}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n        </>\n        )\n    }\n\n    let statusSkeleton = char === null && !loading ? Skeleton : null;\n    let statusLoading = loading ? Spinner : null;\n    let statusError = error ? ErrorMessage : null;\n    let currentStatus = statusError || statusSkeleton || statusLoading || View;\n\n    return (\n        <div className=\"char__info\">\n            {currentStatus(char)}\n        </div>\n    )\n    \n}\n\nCharInfo.propTypes = {\n    characterID: PropTypes.number\n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}