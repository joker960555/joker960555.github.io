{"ast":null,"code":"var _jsxFileName = \"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charList/CharList.js\";\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(props) {\n    super(props);\n    this.marvelService = new MarvelService();\n\n    this.onCharListLoaded = newArray => {\n      this.setState(() => ({\n        charArr: this.state.charArr.concat(newArray),\n        loading: false,\n        error: false,\n        pages: this.state.pages++\n      }));\n    };\n\n    this.updateCharList = () => {\n      this.marvelService.getAllCharacters().then(charArr => this.onCharListLoaded(charArr)).catch(e => this.setState({\n        loading: false,\n        error: true\n      }));\n    };\n\n    this.loadMore = () => {\n      this.marvelService.getMoreCharacters().then(charArr => this.onCharListLoaded(charArr)).catch(e => this.setState({\n        loading: false,\n        error: true\n      }));\n    };\n\n    this.renderCharListItems = charArr => {\n      const items = charArr.map(item => {\n        const {\n          name,\n          thumbnail,\n          thumbnailCoverStatus,\n          id\n        } = item;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__item\",\n          onClick: () => this.props.onCharSelected(id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: thumbnailCoverStatus,\n            src: thumbnail,\n            alt: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"char__name\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"char__grid\",\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.spinnerOnLoadingMore = () => {\n      return;\n    };\n\n    this.render = () => {\n      const {\n        charArr,\n        loading,\n        error\n      } = this.state; // let statusLoading = loading && charArr.length === 9 ? Spinner : null;\n\n      let statusLoading = loading ? Spinner : null;\n      let statusError = error ? ErrorMessage : null; // let loadMore = charArr.length > 9 && loading ? true : false\n\n      console.log(statusLoading, charArr.length);\n      let currentStatus = statusError || statusLoading || this.renderCharListItems;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"char__list\",\n        children: [currentStatus(charArr), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.loadMore,\n          className: \"button button__main button__long\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"load more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      charArr: [],\n      loading: true,\n      error: false,\n      pages: 0\n    };\n  }\n\n  componentDidMount() {\n    this.updateCharList();\n  } // componentDidUpdate(prevProps, prevState) {\n  //     if (this.state.charArr.length !== prevProps.charArr.length) {\n  //         this.updateChar();\n  //         this.setState({loading: true, error: false});\n  //     }\n  // }\n\n\n}\n\nexport default CharList;\n/* <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item char__item_selected\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li> */","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charList/CharList.js"],"names":["Component","MarvelService","Spinner","ErrorMessage","CharList","constructor","props","marvelService","onCharListLoaded","newArray","setState","charArr","state","concat","loading","error","pages","updateCharList","getAllCharacters","then","catch","e","loadMore","getMoreCharacters","renderCharListItems","items","map","item","name","thumbnail","thumbnailCoverStatus","id","onCharSelected","spinnerOnLoadingMore","render","statusLoading","statusError","console","log","length","currentStatus","componentDidMount"],"mappings":"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","sourcesContent":["import { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            charArr: [],\n            loading: true,\n            error: false,\n            pages: 0\n        }\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateCharList();\n    }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     if (this.state.charArr.length !== prevProps.charArr.length) {\n    //         this.updateChar();\n    //         this.setState({loading: true, error: false});\n    //     }\n    // }\n\n    onCharListLoaded = (newArray) => {\n        this.setState(() => ({\n            charArr: this.state.charArr.concat(newArray),\n            loading: false,\n            error: false,\n            pages: this.state.pages++\n        }))\n    }\n    \n    updateCharList = () => {\n        this.marvelService\n            .getAllCharacters()\n            .then(charArr => this.onCharListLoaded(charArr))\n            .catch(e => this.setState({loading: false, error: true}))\n    }\n\n    loadMore = () => {\n        this.marvelService\n            .getMoreCharacters()\n            .then(charArr => this.onCharListLoaded(charArr))\n            .catch(e => this.setState({loading: false, error: true}))\n    }\n    renderCharListItems = (charArr) => {\n        const items = charArr.map(item => {\n            const {name, thumbnail, thumbnailCoverStatus, id} = item;\n            return (\n                <li className=\"char__item\" onClick={() => this.props.onCharSelected(id)} key={id}>\n                <img className={thumbnailCoverStatus} src={thumbnail} alt={name}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    spinnerOnLoadingMore = () => {\n        return \n    }\n    \n    render = () => {\n        const {charArr, loading, error} = this.state;\n        // let statusLoading = loading && charArr.length === 9 ? Spinner : null;\n        let statusLoading = loading ? Spinner : null;\n        let statusError = error ? ErrorMessage : null;\n        // let loadMore = charArr.length > 9 && loading ? true : false\n        console.log(statusLoading, charArr.length)\n        let currentStatus = statusError || statusLoading || this.renderCharListItems\n        return (\n            <div className=\"char__list\">\n                {currentStatus(charArr)}\n                <button onClick={this.loadMore} className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;\n\n/* <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item char__item_selected\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li> */"]},"metadata":{},"sourceType":"module"}