{"ast":null,"code":"var _jsxFileName = \"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charInfo/CharInfo.js\";\nimport { Component } from 'react/cjs/react.production.min';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CharInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.marvelService = new MarvelService();\n\n    this.updateChar = () => {\n      const {\n        characterID\n      } = this.props;\n\n      if (!characterID) {\n        console.log(characterID, 22);\n        return;\n      }\n\n      this.marvelService.getCharacterById(characterID).then(char => {\n        console.log(11);\n        this.setState({\n          char: char,\n          loading: false,\n          error: false\n        });\n      }).catch(e => this.setState({\n        error: true,\n        loading: false\n      }));\n    };\n\n    this.View = ({\n      name,\n      description,\n      thumbnail,\n      homepage,\n      wiki,\n      thumbnailCoverStatus,\n      comics\n    }) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__basics\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: thumbnailCoverStatus,\n            src: thumbnail,\n            alt: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"char__info-name\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"char__btns\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: homepage,\n                className: \"button button__main\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inner\",\n                  children: \"homepage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: wiki,\n                className: \"button button__secondary\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inner\",\n                  children: \"Wiki\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__descr\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__comics\",\n          children: \"Comics:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"char__comics-list\",\n          children: comics.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"char__comics-item\",\n            children: item.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.render = () => {\n      const {\n        char,\n        loading,\n        error\n      } = this.state;\n      console.log(char);\n      let statusSkeleton = char === null ? Skeleton : null;\n      let statusLoading = loading ? Spinner : null;\n      let statusError = error ? ErrorMessage : null;\n      let currentStatus = statusError || statusSkeleton || statusLoading || this.View;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"char__info\",\n        children: currentStatus(char)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      char: null,\n      loading: false,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevProps);\n\n    if (this.props.characterID !== prevProps.characterID) {\n      console.log(1);\n      this.updateChar();\n      this.setState({\n        loading: true,\n        error: false\n      });\n    }\n  }\n\n}\n\nexport default CharInfo;","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charInfo/CharInfo.js"],"names":["Component","MarvelService","Spinner","ErrorMessage","Skeleton","CharInfo","constructor","props","marvelService","updateChar","characterID","console","log","getCharacterById","then","char","setState","loading","error","catch","e","View","name","description","thumbnail","homepage","wiki","thumbnailCoverStatus","comics","map","item","i","render","state","statusSkeleton","statusLoading","statusError","currentStatus","componentDidMount","componentDidUpdate","prevProps","prevState"],"mappings":"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","sourcesContent":["import { Component } from 'react/cjs/react.production.min';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            char: null,\n            loading: false,\n            error: false\n        }\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(prevProps)\n        if (this.props.characterID !== prevProps.characterID) {\n            console.log(1)\n            this.updateChar();\n            this.setState({loading: true, error: false});\n        }\n    }\n\n    updateChar = () => {\n        const {characterID} = this.props;\n        if (!characterID) {\n            console.log(characterID, 22)\n            return;\n        }\n\n        this.marvelService\n            .getCharacterById(characterID)\n            .then(char =>{ console.log(11);this.setState({char: char, loading: false, error: false})})\n            .catch(e => this.setState({error: true, loading: false}))\n    }\n\n    View = ({name, description, thumbnail, homepage, wiki, thumbnailCoverStatus, comics}) => {\n        return (\n        <>\n        <div className=\"char__basics\">\n            <img className={thumbnailCoverStatus} src={thumbnail} alt={name}/>\n            <div>\n                <div className=\"char__info-name\">{name}</div>\n                <div className=\"char__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div className=\"char__descr\">\n            {description}\n        </div>\n        <div className=\"char__comics\">Comics:</div>\n        <ul className=\"char__comics-list\">\n            {comics.map((item, i) => (\n                <li key={i} className=\"char__comics-item\">\n                    {item.name}\n                </li>\n            ))}\n        </ul>\n        </>\n        )\n    }\n\n    render = () => {\n        const {char, loading, error} = this.state;\n        console.log(char)\n        let statusSkeleton = char === null ? Skeleton : null;\n        let statusLoading = loading ? Spinner : null;\n        let statusError = error ? ErrorMessage : null;\n        let currentStatus = statusError || statusSkeleton || statusLoading ||\n            this.View;\n\n        return (\n            <div className=\"char__info\">\n                {currentStatus(char)}\n            </div>\n        )\n    }\n    \n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}