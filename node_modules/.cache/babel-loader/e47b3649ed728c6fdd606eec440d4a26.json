{"ast":null,"code":"class MarvelService {\n  constructor() {\n    this._apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    this._apiKey = 'apikey=bd35b0eefb6ce288f155f735ed56a8d6';\n\n    this.getResource = async url => {\n      let res = await fetch(url);\n\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllCharacters = async () => {\n      const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=333&${this._apiKey}`);\n      return res.data.results.map(this._transformCharacter);\n    };\n\n    this.getCharacterById = async id => {\n      const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n      return this._transformCharacter(res.data.results[0]);\n    };\n\n    this._transformCharacter = ({\n      name,\n      description,\n      thumbnail,\n      homepage,\n      wiki\n    }) => {\n      // const emptyMessage = 'Sorry, description for this character was not added yet';\n      // let empty = !description ? emptyMessage : description;\n      return {\n        name: name,\n        description: !description ? 'Sorry, description for this character was not added yet' : description.length > 210 ? `${description.slice(0, 211)}…` : description,\n        thumbnail: `${thumbnail.path}.${thumbnail.extension} `,\n        homepage: urls[0].url,\n        wiki: urls[1].url\n      };\n    };\n  }\n\n}\n\nexport default MarvelService;","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/services/MarvelService.js"],"names":["MarvelService","_apiBase","_apiKey","getResource","url","res","fetch","ok","Error","status","json","getAllCharacters","data","results","map","_transformCharacter","getCharacterById","id","name","description","thumbnail","homepage","wiki","length","slice","path","extension","urls"],"mappings":"AAEA,MAAMA,aAAN,CAAoB;AAAA;AAAA,SAChBC,QADgB,GACL,2CADK;AAAA,SAEhBC,OAFgB,GAEN,yCAFM;;AAAA,SAIhBC,WAJgB,GAIF,MAAOC,GAAP,IAAe;AACzB,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;;AAEA,UAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,cAAM,IAAIC,KAAJ,CAAW,mBAAkBJ,GAAI,aAAYC,GAAG,CAACI,MAAO,EAAxD,CAAN;AACH;;AAED,aAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACH,KAZe;;AAAA,SAchBC,gBAdgB,GAcG,YAAY;AAC3B,YAAMN,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,GAAE,KAAKF,QAAS,iCAAgC,KAAKC,OAAQ,EAA/E,CAAlB;AACA,aAAOG,GAAG,CAACO,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqB,KAAKC,mBAA1B,CAAP;AACH,KAjBe;;AAAA,SAmBhBC,gBAnBgB,GAmBG,MAAOC,EAAP,IAAc;AAC7B,YAAMZ,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,GAAE,KAAKF,QAAS,cAAagB,EAAG,IAAG,KAAKf,OAAQ,EAAlE,CAAlB;AACA,aAAO,KAAKa,mBAAL,CAAyBV,GAAG,CAACO,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAzB,CAAP;AACH,KAtBe;;AAAA,SAwBhBE,mBAxBgB,GAwBM,CAAC;AAACG,MAAAA,IAAD;AAAOC,MAAAA,WAAP;AAAoBC,MAAAA,SAApB;AAA+BC,MAAAA,QAA/B;AAAyCC,MAAAA;AAAzC,KAAD,KAAoD;AACtE;AACA;AAEA,aAAO;AACHJ,QAAAA,IAAI,EAAEA,IADH;AAEHC,QAAAA,WAAW,EACP,CAACA,WAAD,GACI,yDADJ,GAEIA,WAAW,CAACI,MAAZ,GAAqB,GAArB,GACK,GAAEJ,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAqB,GAArB,CAA0B,GADjC,GACsCL,WAN3C;AAOHC,QAAAA,SAAS,EAAG,GAAEA,SAAS,CAACK,IAAK,IAAGL,SAAS,CAACM,SAAU,GAPjD;AAQHL,QAAAA,QAAQ,EAAEM,IAAI,CAAC,CAAD,CAAJ,CAAQvB,GARf;AASHkB,QAAAA,IAAI,EAAEK,IAAI,CAAC,CAAD,CAAJ,CAAQvB;AATX,OAAP;AAWH,KAvCe;AAAA;;AAAA;;AA0CpB,eAAeJ,aAAf","sourcesContent":["\n\nclass MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=bd35b0eefb6ce288f155f735ed56a8d6';\n\n    getResource = async (url) => {\n        let res = await fetch(url)\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async () => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=333&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacterById = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = ({name, description, thumbnail, homepage, wiki}) => {\n        // const emptyMessage = 'Sorry, description for this character was not added yet';\n        // let empty = !description ? emptyMessage : description;\n\n        return {\n            name: name,\n            description: \n                !description ?\n                    'Sorry, description for this character was not added yet' :\n                    description.length > 210 ? \n                        `${description.slice(0, 211)}…` : description,\n            thumbnail: `${thumbnail.path}.${thumbnail.extension} `,\n            homepage: urls[0].url,\n            wiki: urls[1].url\n        }\n    }\n}\n\nexport default MarvelService;"]},"metadata":{},"sourceType":"module"}