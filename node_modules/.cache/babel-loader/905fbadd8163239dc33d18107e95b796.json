{"ast":null,"code":"var _jsxFileName = \"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/SingleComicPage.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './singleComicPage.scss';\nimport xMen from '../../resources/img/x-men.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SingleComicPage = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    comic,\n    setComic\n  } = useState(null);\n  const {\n    loading,\n    error,\n    getCharacterById,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    onComicLoad();\n  }, []);\n\n  const onComicLoad = () => {\n    _s();\n\n    const {\n      comicId\n    } = useParams();\n    getCharacterById(comicId).then(resp => setComic(resp)).catch(e => {});\n  };\n\n  _s(onComicLoad, \"pF4rEujwZyVaC8uEdYx97gatZ3s=\", false, function () {\n    return [useParams];\n  });\n\n  const View = ({\n    title,\n    prices,\n    urls,\n    thumbnail,\n    id,\n    description,\n    pageCount\n  }) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: \"x-men\",\n        className: \"single-comic__img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-comic__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"single-comic__name\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"single-comic__descr\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"single-comic__descr\",\n          children: [pageCount, \" pages\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"single-comic__descr\",\n          children: \"Language: en-us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-comic__price\",\n          children: [prices, \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '..',\n        className: \"single-comic__back\",\n        children: \"Back to all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  let statusLoading = loading ? Spinner : null;\n  let statusError = error ? ErrorMessage : null;\n  let currentStatus = statusError || statusLoading || View;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-comic\",\n    children: currentStatus(comic)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(SingleComicPage, \"y69JVg56UDLXb27FfRvPCMdTSuM=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = SingleComicPage;\nexport default SingleComicPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleComicPage\");","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/SingleComicPage.js"],"names":["useState","useEffect","Link","useParams","useMarvelService","Spinner","ErrorMessage","xMen","SingleComicPage","comic","setComic","loading","error","getCharacterById","clearError","onComicLoad","comicId","then","resp","catch","e","View","title","prices","urls","thumbnail","id","description","pageCount","statusLoading","statusError","currentStatus"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AAEA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,wBAAP;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAAA;;AAE1B,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAACW,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,gBAAjB;AAAmCC,IAAAA;AAAnC,MAAiDV,gBAAgB,EAAvE;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,MAAM;AAAA;;AACtB,UAAM;AAACC,MAAAA;AAAD,QAAYb,SAAS,EAA3B;AACAU,IAAAA,gBAAgB,CAACG,OAAD,CAAhB,CACCC,IADD,CACMC,IAAI,IAAIR,QAAQ,CAACQ,IAAD,CADtB,EAECC,KAFD,CAEOC,CAAC,IAAI,CAAE,CAFd;AAGH,GALD;;AAT0B,KASpBL,WAToB;AAAA,YAUJZ,SAVI;AAAA;;AAgB1B,QAAMkB,IAAI,GAAG,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA,EAAjC;AAAqCC,IAAAA,WAArC;AAAkDC,IAAAA;AAAlD,GAAD,KAAkE;AAC3E,wBACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEH,SAAV;AAAqB,QAAA,GAAG,EAAC,OAAzB;AAAiC,QAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACA;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA,oBAAoCH;AAApC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAA,oBAAoCK;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAA,qBAAoCC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,qBAAsCL,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,IAAV;AAAgB,QAAA,SAAS,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA,oBADJ;AAaH,GAdD;;AAgBA,MAAIM,aAAa,GAAGlB,OAAO,GAAGN,OAAH,GAAa,IAAxC;AACA,MAAIyB,WAAW,GAAGlB,KAAK,GAAGN,YAAH,GAAkB,IAAzC;AACA,MAAIyB,aAAa,GAAGD,WAAW,IAAID,aAAf,IAAgCR,IAApD;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACKU,aAAa,CAACtB,KAAD;AADlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzCD;;IAAMD,e;UAGqDJ,gB;;;KAHrDI,e;AA2CN,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './singleComicPage.scss';\nimport xMen from '../../resources/img/x-men.png';\n\nconst SingleComicPage = () => {\n\n    const {comic, setComic} = useState(null);\n    const {loading, error, getCharacterById, clearError} = useMarvelService();\n\n    useEffect(() => {\n        onComicLoad();\n    }, []);\n\n    const onComicLoad = () => {\n        const {comicId} = useParams();\n        getCharacterById(comicId)\n        .then(resp => setComic(resp))\n        .catch(e => {})\n    }\n\n    const View = ({title, prices, urls, thumbnail, id, description, pageCount}) => {\n        return (\n            <>\n                <img src={thumbnail} alt=\"x-men\" className=\"single-comic__img\"/>\n                <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount} pages</p>\n                <p className=\"single-comic__descr\">Language: en-us</p>\n                <div className=\"single-comic__price\">{prices}$</div>\n                </div>\n                <Link to={'..'} className=\"single-comic__back\">Back to all</Link>\n            </>\n        );\n    }\n\n    let statusLoading = loading ? Spinner : null;\n    let statusError = error ? ErrorMessage : null;\n    let currentStatus = statusError || statusLoading || View;\n\n    return (\n        <div className=\"single-comic\">\n            {currentStatus(comic)}\n        </div>\n    )\n}\n\nexport default SingleComicPage;"]},"metadata":{},"sourceType":"module"}