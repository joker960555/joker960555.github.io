{"ast":null,"code":"var _jsxFileName = \"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charList/CharList.js\";\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(props) {\n    super(props);\n    this.marvelService = new MarvelService();\n\n    this.onCharListLoaded = newArray => {\n      this.setState(() => ({\n        charArr: this.state.charArr.concat(newArray),\n        loading: false,\n        error: false\n      }));\n    };\n\n    this.updateCharList = () => {\n      this.marvelService.getAllCharacters().then(charArr => this.onCharListLoaded(charArr)).catch(e => this.setState({\n        loading: false,\n        error: true\n      }));\n    };\n\n    this.loadMore = () => {\n      this.marvelService.getMoreCharacters().then(charArr => this.onCharListLoaded(charArr)).catch(e => this.setState({\n        loading: false,\n        error: true\n      }));\n    };\n\n    this.renderCharListItems = charArr => {\n      const items = charArr.map(item => {\n        const {\n          name,\n          thumbnail,\n          thumbnailCoverStatus,\n          id\n        } = item;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"char__item\",\n            onClick: () => this.props.onCharSelected(id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: thumbnailCoverStatus,\n              src: thumbnail,\n              alt: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"char__name\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)\n        }, void 0, false);\n      });\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"char__grid\",\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.render = () => {\n      const {\n        charArr,\n        loading,\n        error\n      } = this.state; // let statusLoading = loading && charArr.length === 9 ? Spinner : null;\n\n      let statusLoading = loading ? Spinner : null;\n      let statusError = error ? ErrorMessage : null; // let loadMore = charArr.length > 9 && loading ? true : false\n\n      let currentStatus = statusError || statusLoading || this.renderCharListItems;\n      console.log(statusLoading, charArr.length);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"char__list\",\n        children: [currentStatus(charArr), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.loadMore,\n          className: \"button button__main button__long\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"load more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      charArr: [],\n      loading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    this.updateCharList();\n  }\n\n}\n\nexport default CharList;\n/* <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item char__item_selected\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li> */","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charList/CharList.js"],"names":["Component","MarvelService","Spinner","ErrorMessage","CharList","constructor","props","marvelService","onCharListLoaded","newArray","setState","charArr","state","concat","loading","error","updateCharList","getAllCharacters","then","catch","e","loadMore","getMoreCharacters","renderCharListItems","items","map","item","name","thumbnail","thumbnailCoverStatus","id","onCharSelected","render","statusLoading","statusError","currentStatus","console","log","length","componentDidMount"],"mappings":"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","sourcesContent":["import { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            charArr: [],\n            loading: true,\n            error: false\n        }\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateCharList();\n    }\n\n    onCharListLoaded = (newArray) => {\n        this.setState(() => ({\n            charArr: this.state.charArr.concat(newArray),\n            loading: false,\n            error: false\n        }))\n    }\n    \n    updateCharList = () => {\n        this.marvelService\n            .getAllCharacters()\n            .then(charArr => this.onCharListLoaded(charArr))\n            .catch(e => this.setState({loading: false, error: true}))\n    }\n\n    loadMore = () => {\n        this.marvelService\n            .getMoreCharacters()\n            .then(charArr => this.onCharListLoaded(charArr))\n            .catch(e => this.setState({loading: false, error: true}))\n    }\n\n    renderCharListItems = (charArr) => {\n        const items = charArr.map(item => {\n            const {name, thumbnail, thumbnailCoverStatus, id} = item;\n            return (\n                <>\n                    <li className=\"char__item\" onClick={() => this.props.onCharSelected(id)} key={id}>\n                        <img className={thumbnailCoverStatus} src={thumbnail} alt={name}/>\n                        <div className=\"char__name\">{name}</div>\n                    </li>\n                    {/* {loadMore ? <Spinner/> : null} */}\n                </>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    render = () => {\n        const {charArr, loading, error} = this.state;\n        // let statusLoading = loading && charArr.length === 9 ? Spinner : null;\n        let statusLoading = loading ? Spinner : null;\n        let statusError = error ? ErrorMessage : null;\n        // let loadMore = charArr.length > 9 && loading ? true : false\n        let currentStatus = statusError || statusLoading || this.renderCharListItems\n        console.log(statusLoading, charArr.length)\n        return (\n            <div className=\"char__list\">\n                {currentStatus(charArr)}\n\n                <button onClick={this.loadMore} className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;\n\n/* <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item char__item_selected\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li> */"]},"metadata":{},"sourceType":"module"}