{"ast":null,"code":"import _regeneratorRuntime from\"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";var MarvelService=function MarvelService(){var _this=this;_classCallCheck(this,MarvelService);this._apiBase='https://gateway.marvel.com:443/v1/public/';this._apiKey='apikey=bd35b0eefb6ce288f155f735ed56a8d6';this._apiOffsetValue='111';this.getResource=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(url);case 2:res=_context.sent;if(res.ok){_context.next=5;break;}throw new Error(\"Could not fetch \".concat(url,\", status: \").concat(res.status));case 5:_context.next=7;return res.json();case 7:return _context.abrupt(\"return\",_context.sent);case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();this.getAllCharacters=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _this.getResource(\"\".concat(_this._apiBase,\"characters?limit=9&offset=\").concat(_this._apiOffsetValue,\"&\").concat(_this._apiKey));case 2:res=_context2.sent;return _context2.abrupt(\"return\",res.data.results.map(_this._transformCharacter));case 4:case\"end\":return _context2.stop();}}},_callee2);}));this.getMoreCharacters=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_this._apiOffsetValue=(+_this._apiOffsetValue+9).toString();_context3.next=3;return _this.getAllCharacters();case 3:return _context3.abrupt(\"return\",_context3.sent);case 4:case\"end\":return _context3.stop();}}},_callee3);}));this.getCharacterById=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){var res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _this.getResource(\"\".concat(_this._apiBase,\"characters/\").concat(id,\"?\").concat(_this._apiKey));case 2:res=_context4.sent;return _context4.abrupt(\"return\",_this._transformCharacter(res.data.results[0]));case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x2){return _ref4.apply(this,arguments);};}();this._transformCharacter=function(_ref5){var name=_ref5.name,description=_ref5.description,thumbnail=_ref5.thumbnail,urls=_ref5.urls,id=_ref5.id,comics=_ref5.comics;var onEmptyMessage='Sorry, description for this character was not added yet';var checkDescription=!description?onEmptyMessage:\"\".concat(description.slice(0,211),\"\\u2026\");var thumbnailCoverStatus=thumbnail.path.includes('image_not_available')?' _not-found':'';return{name:name,description:checkDescription,thumbnail:\"\".concat(thumbnail.path,\".\").concat(thumbnail.extension,\" \"),homepage:urls[0].url,wiki:urls[1].url,thumbnailCoverStatus:thumbnailCoverStatus,id:id,comics:comics.items.slice(0,10)};};};export default MarvelService;","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/services/MarvelService.js"],"names":["MarvelService","_apiBase","_apiKey","_apiOffsetValue","getResource","url","fetch","res","ok","Error","status","json","getAllCharacters","data","results","map","_transformCharacter","getMoreCharacters","toString","getCharacterById","id","name","description","thumbnail","urls","comics","onEmptyMessage","checkDescription","slice","thumbnailCoverStatus","path","includes","extension","homepage","wiki","items"],"mappings":"mmBACMA,CAAAA,a,kFACFC,Q,CAAW,2C,MACXC,O,CAAU,yC,MACVC,e,CAAkB,K,MAElBC,W,0FAAc,iBAAOC,GAAP,gJACMC,CAAAA,KAAK,CAACD,GAAD,CADX,QACNE,GADM,kBAGLA,GAAG,CAACC,EAHC,8BAIA,IAAIC,CAAAA,KAAJ,2BAA6BJ,GAA7B,sBAA6CE,GAAG,CAACG,MAAjD,EAJA,8BAOGH,CAAAA,GAAG,CAACI,IAAJ,EAPH,6G,oEAUdC,gB,sEAAmB,uKACG,CAAA,KAAI,CAACR,WAAL,WAAoB,KAAI,CAACH,QAAzB,sCAA8D,KAAI,CAACE,eAAnE,aAAsF,KAAI,CAACD,OAA3F,EADH,QACTK,GADS,iDAERA,GAAG,CAACM,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqB,KAAI,CAACC,mBAA1B,CAFQ,0D,QAKnBC,iB,sEAAoB,wIAChB,KAAI,CAACd,eAAL,CAAuB,CAAC,CAAC,KAAI,CAACA,eAAN,CAAwB,CAAzB,EAA4Be,QAA5B,EAAvB,CADgB,uBAEH,CAAA,KAAI,CAACN,gBAAL,EAFG,iH,QAKpBO,gB,2FAAmB,kBAAOC,EAAP,qJACG,CAAA,KAAI,CAAChB,WAAL,WAAoB,KAAI,CAACH,QAAzB,uBAA+CmB,EAA/C,aAAqD,KAAI,CAAClB,OAA1D,EADH,QACTK,GADS,iDAER,KAAI,CAACS,mBAAL,CAAyBT,GAAG,CAACM,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAzB,CAFQ,0D,sEAKnBE,mB,CAAsB,eAAsD,IAApDK,CAAAA,IAAoD,OAApDA,IAAoD,CAA9CC,WAA8C,OAA9CA,WAA8C,CAAjCC,SAAiC,OAAjCA,SAAiC,CAAtBC,IAAsB,OAAtBA,IAAsB,CAAhBJ,EAAgB,OAAhBA,EAAgB,CAAZK,MAAY,OAAZA,MAAY,CACxE,GAAMC,CAAAA,cAAc,CAAG,yDAAvB,CACA,GAAIC,CAAAA,gBAAgB,CAAG,CAACL,WAAD,CAAeI,cAAf,WAAmCJ,WAAW,CAACM,KAAZ,CAAkB,CAAlB,CAAqB,GAArB,CAAnC,UAAvB,CACA,GAAIC,CAAAA,oBAAoB,CAAGN,SAAS,CAACO,IAAV,CAAeC,QAAf,CAAwB,qBAAxB,EACvB,aADuB,CACP,EADpB,CAGA,MAAO,CACHV,IAAI,CAAEA,IADH,CAEHC,WAAW,CAAEK,gBAFV,CAGHJ,SAAS,WAAKA,SAAS,CAACO,IAAf,aAAuBP,SAAS,CAACS,SAAjC,KAHN,CAIHC,QAAQ,CAAET,IAAI,CAAC,CAAD,CAAJ,CAAQnB,GAJf,CAKH6B,IAAI,CAAEV,IAAI,CAAC,CAAD,CAAJ,CAAQnB,GALX,CAMHwB,oBAAoB,CAAEA,oBANnB,CAOHT,EAAE,CAAEA,EAPD,CAQHK,MAAM,CAAEA,MAAM,CAACU,KAAP,CAAaP,KAAb,CAAmB,CAAnB,CAAsB,EAAtB,CARL,CAAP,CAUH,C,GAGL,cAAe5B,CAAAA,aAAf","sourcesContent":["\nclass MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=bd35b0eefb6ce288f155f735ed56a8d6';\n    _apiOffsetValue = '111';\n\n    getResource = async (url) => {\n        let res = await fetch(url)\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async () => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${this._apiOffsetValue}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getMoreCharacters = async () => {\n        this._apiOffsetValue = (+this._apiOffsetValue + 9).toString();\n        return await this.getAllCharacters();\n    }\n\n    getCharacterById = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = ({name, description, thumbnail, urls, id, comics}) => {\n        const onEmptyMessage = 'Sorry, description for this character was not added yet';\n        let checkDescription = !description ? onEmptyMessage : `${description.slice(0, 211)}â€¦`;\n        let thumbnailCoverStatus = thumbnail.path.includes('image_not_available') ?\n            ' _not-found' : '';\n\n        return {\n            name: name,\n            description: checkDescription,\n            thumbnail: `${thumbnail.path}.${thumbnail.extension} `,\n            homepage: urls[0].url,\n            wiki: urls[1].url,\n            thumbnailCoverStatus: thumbnailCoverStatus, \n            id: id,\n            comics: comics.items.slice(0, 10)\n        }\n    }\n}\n\nexport default MarvelService;"]},"metadata":{},"sourceType":"module"}