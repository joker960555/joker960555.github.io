{"ast":null,"code":"var _jsxFileName = \"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charList/CharList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharList = props => {\n  _s();\n\n  const [charArr, setCharArr] = useState([]);\n  const [pages, setPages] = useState(0);\n  const [charEnded, setCharEnded] = useState(false);\n  const [offset, setOffset] = useState(111);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const {\n    loading,\n    error,\n    getAllCharacters\n  } = useMarvelService();\n  useEffect(() => {\n    onLoadingMore(true);\n  }, []);\n\n  const onCharListLoaded = newArray => {\n    let ended = newArray.length < 9 ? true : false;\n    setCharArr(charArr => charArr.concat(newArray));\n    setNewItemLoading(newItemLoading => false);\n    setCharEnded(charEnded => ended);\n  };\n\n  const onLoadingMore = initial => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    setPages(pages => pages + 1);\n    getAllCharacters(offset).then(charArr => onCharListLoaded(charArr)).catch(e => {});\n  };\n\n  const listItemsRefs = useRef([]);\n\n  const isActive = i => {\n    listItemsRefs.current.forEach(item => {\n      item.classList.remove('char__item_selected');\n    });\n    listItemsRefs.current[i].classList.add('char__item_selected');\n    listItemsRefs.current[i].focus();\n  };\n\n  const renderCharListItems = charArr => {\n    console.log(charArr.length);\n    const items = charArr.map((item, i) => {\n      const {\n        name,\n        thumbnail,\n        thumbnailCoverStatus,\n        id\n      } = item;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        ref: el => listItemsRefs.current[i] = el,\n        onClick: () => {\n          props.onCharSelected(id);\n          isActive(i);\n        },\n        onKeyPress: e => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            isActive(i);\n            props.onCharSelected(id);\n          }\n        },\n        tabIndex: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: thumbnailCoverStatus,\n          src: thumbnail,\n          alt: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  };\n\n  let statusLoading = loading && pages === 0 ? Spinner : null;\n  let statusLoadMore = loading && pages > 0 ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 49\n  }, this) : null;\n  let statusError = error ? ErrorMessage : null;\n  let currentStatus = statusError || statusLoading || renderCharListItems;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [currentStatus(charArr), statusLoadMore, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: loading,\n      style: {\n        'display': charEnded ? 'none' : 'block'\n      },\n      onClick: () => setOffset(offset => offset + 9),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharList, \"C+z5VA9KJgKX4Lkn4OkVHf5ipoM=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = CharList;\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired\n};\nexport default CharList;\n/* <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item char__item_selected\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li> */\n\nvar _c;\n\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charList/CharList.js"],"names":["useState","useEffect","useRef","PropTypes","useMarvelService","Spinner","ErrorMessage","CharList","props","charArr","setCharArr","pages","setPages","charEnded","setCharEnded","offset","setOffset","newItemLoading","setNewItemLoading","loading","error","getAllCharacters","onLoadingMore","onCharListLoaded","newArray","ended","length","concat","initial","then","catch","e","listItemsRefs","isActive","i","current","forEach","item","classList","remove","add","focus","renderCharListItems","console","log","items","map","name","thumbnail","thumbnailCoverStatus","id","el","onCharSelected","key","statusLoading","statusLoadMore","statusError","currentStatus","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charArr, setCharArr] = useState([]);\n    const [pages, setPages] = useState(0);\n    const [charEnded, setCharEnded] = useState(false);\n    const [offset, setOffset] = useState(111);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onLoadingMore(true);\n    }, [])\n\n    const onCharListLoaded = (newArray) => {\n        let ended = newArray.length < 9 ? true : false;\n\n        setCharArr(charArr => charArr.concat(newArray));\n        setNewItemLoading(newItemLoading => false);\n        setCharEnded(charEnded => ended);\n    }\n\n    const onLoadingMore = (initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        setPages(pages => pages + 1);\n        getAllCharacters(offset)\n            .then(charArr => onCharListLoaded(charArr))\n            .catch(e => {})\n    }\n\n    const listItemsRefs = useRef([]);\n\n    const isActive = (i) => {\n        listItemsRefs.current.forEach(item => {\n            item.classList.remove('char__item_selected')\n        });\n        listItemsRefs.current[i].classList.add('char__item_selected');\n        listItemsRefs.current[i].focus();\n    }\n\n    const renderCharListItems = (charArr) => {\n        console.log(charArr.length)\n        const items = charArr.map((item, i) => {\n            const {name, thumbnail, thumbnailCoverStatus, id} = item;\n            return (\n                <li className=\"char__item\" \n                    key={id}\n                    ref={el => listItemsRefs.current[i] = el}\n                    onClick={() => {\n                        props.onCharSelected(id);\n                        isActive(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter' || e.key === ' ') {\n                            isActive(i);\n                            props.onCharSelected(id);\n                        }\n                    }}\n                    tabIndex={0}\n                >\n                    <img className={thumbnailCoverStatus} src={thumbnail} alt={name}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        })\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    let statusLoading = loading && pages === 0 ? Spinner : null;\n    let statusLoadMore = loading && pages > 0 ? <Spinner/> : null;\n    let statusError = error ? ErrorMessage : null;\n    let currentStatus = statusError || statusLoading || renderCharListItems\n    return (\n        <div className=\"char__list\">\n            {currentStatus(charArr)}\n            {statusLoadMore}\n            <button \n                className=\"button button__main button__long\"\n                disabled={loading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => setOffset(offset => offset + 9)} \n            >\n                    <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;\n\n/* <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item char__item_selected\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li> */"]},"metadata":{},"sourceType":"module"}