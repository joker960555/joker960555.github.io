{"ast":null,"code":"var _jsxFileName = \"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/randomChar/RandomChar.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport './randomChar.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomChar = props => {\n  _s();\n\n  const [char, setChar] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const marvelService = new MarvelService();\n  useEffect(() => {\n    updateChar();\n  }, []);\n  useEffect(() => {\n    updateChar();\n    setLoading(loading => true);\n    setError(error => false);\n  }, [props.characterID]);\n\n  const onCharLoaded = char => {\n    setChar(char);\n    setLoading(loading => false);\n    setError(error => false);\n  };\n\n  const updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    marvelService.getCharacterById(id).then(onCharLoaded).catch(e => {\n      setLoading(loading => false);\n      setError(error => true);\n    });\n  };\n\n  const toggleCharacterOnClick = () => {\n    setLoading(loading => true);\n    setError(error => false);\n    updateChar();\n  };\n\n  let statusError = error ? ErrorMessage : null;\n  let statusLoading = loading ? Spinner : null;\n  let currentStatus = statusError || statusLoading || onLoaded;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar\",\n    children: [currentStatus(char), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__static\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 48\n        }, this), \"Do you want to get to know him better?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: \"Or choose another one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main\",\n        onClick: toggleCharacterOnClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"try it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mjolnir,\n        alt: \"mjolnir\",\n        className: \"randomchar__decoration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RandomChar, \"tNK79wDHT3xtqKtqYvViwimKPfo=\");\n\n_c = RandomChar;\n\nconst onLoaded = ({\n  name,\n  description,\n  thumbnail,\n  homepage,\n  wiki,\n  thumbnailCoverStatus\n}) => {\n  let imgClassName = `randomchar__img${thumbnailCoverStatus}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: \"Random character\",\n      className: imgClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RandomChar;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomChar\");","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/randomChar/RandomChar.js"],"names":["useState","useEffect","MarvelService","Spinner","ErrorMessage","mjolnir","RandomChar","props","char","setChar","loading","setLoading","error","setError","marvelService","updateChar","characterID","onCharLoaded","id","Math","floor","random","getCharacterById","then","catch","e","toggleCharacterOnClick","statusError","statusLoading","currentStatus","onLoaded","name","description","thumbnail","homepage","wiki","thumbnailCoverStatus","imgClassName"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nimport './randomChar.scss';\n\nconst RandomChar = (props) => {\n\n    const [char, setChar] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    const marvelService = new MarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, []);\n\n    useEffect(() => {\n        updateChar()\n        setLoading(loading => true);\n        setError(error => false);\n    }, [props.characterID]);\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n        setLoading(loading => false);\n        setError(error => false);\n    }\n\n    const updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        \n        marvelService\n            .getCharacterById(id)\n            .then(onCharLoaded)\n            .catch((e) => {\n                setLoading(loading => false);\n                setError(error => true);\n            })\n    }\n\n    const toggleCharacterOnClick = () => {\n        setLoading(loading => true);\n        setError(error => false);\n        updateChar();\n    }\n    \n    let statusError = error ? ErrorMessage : null;\n    let statusLoading = loading ? Spinner : null;\n    let currentStatus = statusError || statusLoading || onLoaded;\n\n    return (\n        <div className=\"randomchar\">\n            {currentStatus(char)}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button\n                    className=\"button button__main\"\n                    onClick={toggleCharacterOnClick}\n                >\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst onLoaded = ({name, description, thumbnail, homepage, wiki, thumbnailCoverStatus}) => {\n    let imgClassName = `randomchar__img${thumbnailCoverStatus}`\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail}  alt=\"Random character\" className={imgClassName}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;"]},"metadata":{},"sourceType":"module"}