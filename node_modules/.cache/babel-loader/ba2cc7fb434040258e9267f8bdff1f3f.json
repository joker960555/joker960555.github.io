{"ast":null,"code":"import _classCallCheck from\"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from'react/cjs/react.production.min';import MarvelService from'../../services/MarvelService';import Spinner from'../spinner/Spinner';import ErrorMessage from'../errorMessage/ErrorMessage';import Skeleton from'../skeleton/Skeleton';import'./charInfo.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CharInfo=/*#__PURE__*/function(_Component){_inherits(CharInfo,_Component);var _super=_createSuper(CharInfo);function CharInfo(props){var _this;_classCallCheck(this,CharInfo);_this=_super.call(this,props);_this.marvelService=new MarvelService();_this.updateChar=function(){var characterID=_this.props.characterID;if(!characterID){return;}_this.setState({loading:true,error:false});_this.marvelService.getCharacterById(characterID).then(function(char){_this.setState({char:char,loading:false,error:false});}).catch(function(e){return _this.setState({error:true,loading:false});});};_this.View=function(_ref){var name=_ref.name,description=_ref.description,thumbnail=_ref.thumbnail,homepage=_ref.homepage,wiki=_ref.wiki,thumbnailCoverStatus=_ref.thumbnailCoverStatus,comics=_ref.comics;comics.splice(10);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"char__basics\",children:[/*#__PURE__*/_jsx(\"img\",{className:thumbnailCoverStatus,src:thumbnail,alt:name}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"char__info-name\",children:name}),/*#__PURE__*/_jsxs(\"div\",{className:\"char__btns\",children:[/*#__PURE__*/_jsx(\"a\",{href:homepage,className:\"button button__main\",children:/*#__PURE__*/_jsx(\"div\",{className:\"inner\",children:\"homepage\"})}),/*#__PURE__*/_jsx(\"a\",{href:wiki,className:\"button button__secondary\",children:/*#__PURE__*/_jsx(\"div\",{className:\"inner\",children:\"Wiki\"})})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"char__descr\",children:description}),/*#__PURE__*/_jsx(\"div\",{className:\"char__comics\",children:\"Comics:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"char__comics-list\",children:comics.length<1?'There are no comics about this character yet':comics.map(function(item,i){return/*#__PURE__*/_jsx(\"li\",{className:\"char__comics-item\",children:item.name},i);})})]});};_this.render=function(){var _this$state=_this.state,char=_this$state.char,loading=_this$state.loading,error=_this$state.error;var statusSkeleton=char===null&&!loading?Skeleton:null;var statusLoading=loading?Spinner:null;var statusError=error?ErrorMessage:null;var currentStatus=statusError||statusSkeleton||statusLoading||_this.View;return/*#__PURE__*/_jsx(\"div\",{className:\"char__info\",children:currentStatus(char)});};_this.state={char:null,loading:false,error:false};return _this;}_createClass(CharInfo,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateChar();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(this.props.characterID!==prevProps.characterID){this.updateChar();// this.setState({loading: true, error: false});\n}}}]);return CharInfo;}(Component);export default CharInfo;","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charInfo/CharInfo.js"],"names":["Component","MarvelService","Spinner","ErrorMessage","Skeleton","CharInfo","props","marvelService","updateChar","characterID","setState","loading","error","getCharacterById","then","char","catch","e","View","name","description","thumbnail","homepage","wiki","thumbnailCoverStatus","comics","splice","length","map","item","i","render","state","statusSkeleton","statusLoading","statusError","currentStatus","prevProps","prevState"],"mappings":"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","sourcesContent":["import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            char: null,\n            loading: false,\n            error: false\n        }\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.characterID !== prevProps.characterID) {\n            this.updateChar();\n            // this.setState({loading: true, error: false});\n        }\n    }\n\n    updateChar = () => {\n        const {characterID} = this.props;\n        if (!characterID) {\n            return;\n        }\n        this.setState({loading: true, error: false});\n        this.marvelService\n            .getCharacterById(characterID)\n            .then(char =>{this.setState({char: char, loading: false, error: false})})\n            .catch(e => this.setState({error: true, loading: false}))\n    }\n\n    View = ({name, description, thumbnail, homepage, wiki, thumbnailCoverStatus, comics}) => {\n        comics.splice(10);\n        return (\n        <>\n        <div className=\"char__basics\">\n            <img className={thumbnailCoverStatus} src={thumbnail} alt={name}/>\n            <div>\n                <div className=\"char__info-name\">{name}</div>\n                <div className=\"char__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div className=\"char__descr\">\n            {description}\n        </div>\n        <div className=\"char__comics\">Comics:</div>\n        <ul className=\"char__comics-list\">\n            {comics.length < 1 ? 'There are no comics about this character yet' \n            : comics.map((item, i) => (\n                <li key={i} className=\"char__comics-item\">\n                    {item.name}\n                </li>\n            ))}\n        </ul>\n        </>\n        )\n    }\n\n    render = () => {\n        const {char, loading, error} = this.state;\n        let statusSkeleton = char === null && !loading ? Skeleton : null;\n        let statusLoading = loading ? Spinner : null;\n        let statusError = error ? ErrorMessage : null;\n        let currentStatus = statusError || statusSkeleton || statusLoading ||\n            this.View;\n\n        return (\n            <div className=\"char__info\">\n                {currentStatus(char)}\n            </div>\n        )\n    }\n    \n}\n\nCharInfo.propTypes = {\n    characterID: PropTypes.number\n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}