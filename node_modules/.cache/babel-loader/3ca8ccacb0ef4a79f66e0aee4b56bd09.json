{"ast":null,"code":"var _jsxFileName = \"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/randomChar/RandomChar.js\";\nimport { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RandomChar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      char: {},\n      loading: true,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onCharLoaded = char => {\n      this.setState({\n        char,\n        loading: false,\n        error: false\n      });\n    };\n\n    this.updateChar = () => {\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n      this.marvelService.getCharacterById(id).then(this.onCharLoaded).catch(e => this.setState({\n        loading: false,\n        error: true\n      }));\n    };\n\n    this.toggleCharacterOnClick = () => {\n      this.setState({\n        loading: true,\n        error: false\n      });\n      this.updateChar();\n    };\n\n    this.render = () => {\n      const {\n        char,\n        loading,\n        error\n      } = this.state;\n      let statusError = error ? ErrorMessage : null;\n      let statusLoading = loading ? Spinner : null;\n      let currentStatus = statusError || statusLoading || onLoaded;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar\",\n        children: [currentStatus(char), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"randomchar__static\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"randomchar__title\",\n            children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 52\n            }, this), \"Do you want to get to know him better?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"randomchar__title\",\n            children: \"Or choose another one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button__main\",\n            onClick: this.toggleCharacterOnClick,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"try it\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mjolnir,\n            alt: \"mjolnir\",\n            className: \"randomchar__decoration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n}\n\nconst onLoaded = ({\n  name,\n  description,\n  thumbnail,\n  homepage,\n  wiki,\n  thumbnailCoverStatus\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: \"Random character\",\n      className: thumbnailCoverStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\nexport default RandomChar;","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/randomChar/RandomChar.js"],"names":["Component","Spinner","ErrorMessage","mjolnir","MarvelService","RandomChar","state","char","loading","error","marvelService","onCharLoaded","setState","updateChar","id","Math","floor","random","getCharacterById","then","catch","e","toggleCharacterOnClick","render","statusError","statusLoading","currentStatus","onLoaded","componentDidMount","name","description","thumbnail","homepage","wiki","thumbnailCoverStatus"],"mappings":"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","sourcesContent":["import { Component } from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nimport MarvelService from '../../services/MarvelService';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false, error: false});\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        \n        this.marvelService\n            .getCharacterById(id)\n            .then(this.onCharLoaded)\n            .catch((e) => this.setState({loading: false, error: true}))\n    }\n\n    toggleCharacterOnClick = () => {\n        this.setState({loading: true, error: false});\n        this.updateChar();\n    }\n    \n    render = () => {\n        const {char, loading, error} = this.state;\n\n        let statusError = error ? ErrorMessage : null;\n        let statusLoading = loading ? Spinner : null;\n        let currentStatus = statusError || statusLoading || onLoaded;\n\n        return (\n            <div className=\"randomchar\">\n                {currentStatus(char)}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button\n                        className=\"button button__main\"\n                        onClick={this.toggleCharacterOnClick}\n                    >\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst onLoaded = ({name, description, thumbnail, homepage, wiki, thumbnailCoverStatus}) => {\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail}  alt=\"Random character\" className={thumbnailCoverStatus}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;"]},"metadata":{},"sourceType":"module"}