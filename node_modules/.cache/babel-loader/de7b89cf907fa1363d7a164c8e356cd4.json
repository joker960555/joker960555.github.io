{"ast":null,"code":"var _jsxFileName = \"/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charList/CharList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharList = props => {\n  _s();\n\n  const [charArr, setCharArr] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [pages, setPages] = useState(0);\n  const [charEnded, setCharEnded] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const marvelService = new MarvelService();\n  useEffect(() => {\n    updateCharList();\n  }, []);\n\n  const onCharListLoaded = newArray => {\n    let ended = newArray.length < 9 ? true : false; // this.setState(({charArr}) => ({\n    //     charArr: charArr.concat(newArray),\n    //     loading: false,\n    //     error: false,\n    //     charEnded: ended\n    // }))\n    // console.log(charArr.length, charArr)\n\n    setCharArr(charArr => charArr.concat(newArray)); // console.log(charArr.length,charArr)\n\n    setLoading(loading => false);\n    setError(error => false);\n    setCharEnded(charEnded => ended);\n  };\n\n  const updateCharList = () => {\n    console.log(offset);\n    setOffset(offset => offset);\n    marvelService.getAllCharacters(offset).then(charArr => {\n      onCharListLoaded(charArr);\n      console.log(charArr);\n    }).catch(e => {\n      setLoading(loading => false);\n      setError(error => true);\n    });\n  };\n\n  const onLoadingMore = () => {\n    // this.setState({\n    //     loading: true,\n    //     error: false,\n    //     pages: this.state.pages + 1\n    // })\n    setLoading(loading => true);\n    setError(error => false);\n    setPages(pages => pages + 1);\n    setOffset(offset => offset + 9);\n    console.log(offset);\n    marvelService.getMoreCharacters(offset).then(charArr => {\n      onCharListLoaded(charArr);\n      console.log(charArr);\n    }).catch(e => {\n      setLoading(loading => false);\n      setError(error => true);\n    });\n  };\n\n  const listItemsRefs = useRef([]);\n\n  const isActive = i => {\n    listItemsRefs.current.forEach(item => {\n      item.classList.remove('char__item_selected');\n    });\n    listItemsRefs.current[i].classList.add('char__item_selected');\n    listItemsRefs.current[i].focus();\n  };\n\n  const renderCharListItems = charArr => {\n    const items = charArr.map((item, i) => {\n      const {\n        name,\n        thumbnail,\n        thumbnailCoverStatus,\n        id\n      } = item;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        ref: el => listItemsRefs.current[i] = el,\n        onClick: () => {\n          props.onCharSelected(id);\n          isActive(i);\n        },\n        onKeyPress: e => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            isActive(i);\n            props.onCharSelected(id);\n          }\n        },\n        tabIndex: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: thumbnailCoverStatus,\n          src: thumbnail,\n          alt: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  };\n\n  let statusLoading = loading && pages === 0 ? Spinner : null;\n  let statusLoadMore = loading && pages > 0 ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 49\n  }, this) : null;\n  let statusError = error ? ErrorMessage : null;\n  let currentStatus = statusError || statusLoading || renderCharListItems;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [currentStatus(charArr), statusLoadMore, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: loading,\n      style: {\n        'display': charEnded ? 'none' : 'block'\n      },\n      onClick: onLoadingMore,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharList, \"fZOW5pA1FpxKgNIWlb+cGaUTKDU=\");\n\n_c = CharList;\nCharList.propTypes = {\n  onCharSelected: PropTypes.func\n};\nexport default CharList;\n/* <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item char__item_selected\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li> */\n\nvar _c;\n\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/charList/CharList.js"],"names":["useState","useEffect","useRef","PropTypes","MarvelService","Spinner","ErrorMessage","CharList","props","charArr","setCharArr","loading","setLoading","error","setError","pages","setPages","charEnded","setCharEnded","offset","setOffset","marvelService","updateCharList","onCharListLoaded","newArray","ended","length","concat","console","log","getAllCharacters","then","catch","e","onLoadingMore","getMoreCharacters","listItemsRefs","isActive","i","current","forEach","item","classList","remove","add","focus","renderCharListItems","items","map","name","thumbnail","thumbnailCoverStatus","id","el","onCharSelected","key","statusLoading","statusLoadMore","statusError","currentStatus","propTypes","func"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charArr, setCharArr] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [pages, setPages] = useState(0);\n    const [charEnded, setCharEnded] = useState(false);\n    const [offset, setOffset] = useState(210);\n\n    const marvelService = new MarvelService();\n\n    useEffect(() => {\n        updateCharList();\n    }, [])\n\n    const onCharListLoaded = (newArray) => {\n        let ended = newArray.length < 9 ? true : false;\n\n        // this.setState(({charArr}) => ({\n        //     charArr: charArr.concat(newArray),\n        //     loading: false,\n        //     error: false,\n        //     charEnded: ended\n        // }))\n        // console.log(charArr.length, charArr)\n        setCharArr(charArr => charArr.concat(newArray));\n        // console.log(charArr.length,charArr)\n        setLoading(loading => false);\n        setError(error => false);\n        setCharEnded(charEnded => ended);\n    }\n    \n    const updateCharList = () => {\n        console.log(offset)\n        setOffset(offset => offset);\n        marvelService\n            .getAllCharacters(offset)\n            .then(charArr => {onCharListLoaded(charArr);console.log(charArr)})\n            .catch(e => {\n                setLoading(loading => false);\n                setError(error => true);\n            })\n    }\n\n    const onLoadingMore = () => {\n        // this.setState({\n        //     loading: true,\n        //     error: false,\n        //     pages: this.state.pages + 1\n        // })\n        setLoading(loading => true);\n        setError(error => false);\n        setPages(pages => pages + 1);\n        setOffset(offset => offset + 9);\n        console.log(offset)\n        marvelService\n            .getMoreCharacters(offset)\n            .then(charArr => {onCharListLoaded(charArr);console.log(charArr)})\n            .catch(e => {\n                setLoading(loading => false);\n                setError(error => true);\n            })\n    }\n\n    const listItemsRefs = useRef([]);\n\n    const isActive = (i) => {\n        listItemsRefs.current.forEach(item => {\n            item.classList.remove('char__item_selected')\n        });\n        listItemsRefs.current[i].classList.add('char__item_selected');\n        listItemsRefs.current[i].focus();\n    }\n\n    const renderCharListItems = (charArr) => {\n        const items = charArr.map((item, i) => {\n            const {name, thumbnail, thumbnailCoverStatus, id} = item;\n            return (\n                <li className=\"char__item\" \n                    key={id}\n                    ref={el => listItemsRefs.current[i] = el}\n                    onClick={() => {\n                        props.onCharSelected(id);\n                        isActive(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter' || e.key === ' ') {\n                            isActive(i);\n                            props.onCharSelected(id);\n                        }\n                    }}\n                    tabIndex={0}\n                >\n                    <img className={thumbnailCoverStatus} src={thumbnail} alt={name}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    let statusLoading = loading && pages === 0 ? Spinner : null;\n    let statusLoadMore = loading && pages > 0 ? <Spinner/> : null;\n    let statusError = error ? ErrorMessage : null;\n    let currentStatus = statusError || statusLoading || renderCharListItems\n    return (\n        <div className=\"char__list\">\n            {currentStatus(charArr)}\n            {statusLoadMore}\n            <button \n                className=\"button button__main button__long\"\n                disabled={loading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={onLoadingMore} \n            >\n                    <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\nexport default CharList;\n\n/* <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item char__item_selected\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li>\n                    <li className=\"char__item\">\n                        <img src={abyss} alt=\"abyss\"/>\n                        <div className=\"char__name\">Abyss</div>\n                    </li> */"]},"metadata":{},"sourceType":"module"}