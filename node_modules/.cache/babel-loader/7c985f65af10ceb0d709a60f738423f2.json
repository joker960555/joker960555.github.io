{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // import { Link, useParams } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './singleComicPage.scss';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleCharacterPage = () => {\n  _s();\n\n  const [character, setCharacter] = useState({});\n  const {\n    loading,\n    error,\n    getCharacterById,\n    clearError\n  } = useMarvelService(); // const {comicId} = useParams();\n\n  useEffect(() => {\n    updateComic();\n  }, [comicId]);\n\n  const updateComic = () => {\n    clearError();\n    getComicById(comicId).then(resp => onComicLoaded(resp)).catch(e => {});\n  };\n\n  const onComicLoaded = comic => {\n    setComic(comic);\n  };\n\n  const statusLoading = loading ? Spinner : null;\n  const statusError = error ? ErrorMessage : null;\n  const currentStatus = statusError || statusLoading || ComicService;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentStatus(character)\n  }, void 0, false);\n};\n\n_s(SingleCharacterPage, \"yyvD6KODwbBDNb78WoBruYr4NRM=\", false, function () {\n  return [useMarvelService];\n});\n\n_c = SingleCharacterPage;\nexport default SingleCharacterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCharacterPage\");","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/components/pages/SingleCharacterPage.js"],"names":["useState","useEffect","useMarvelService","Spinner","ErrorMessage","SingleCharacterPage","character","setCharacter","loading","error","getCharacterById","clearError","updateComic","comicId","getComicById","then","resp","onComicLoaded","catch","e","comic","setComic","statusLoading","statusError","currentStatus","ComicService"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AAEA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,wBAAP;;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAACQ,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,gBAAjB;AAAmCC,IAAAA;AAAnC,MAAiDT,gBAAgB,EAAvE,CAH8B,CAI9B;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACC,OAAD,CAFM,CAAT;;AAMA,QAAMD,WAAW,GAAG,MAAM;AACtBD,IAAAA,UAAU;AACVG,IAAAA,YAAY,CAACD,OAAD,CAAZ,CACCE,IADD,CACMC,IAAI,IAAIC,aAAa,CAACD,IAAD,CAD3B,EAECE,KAFD,CAEOC,CAAC,IAAI,CAAE,CAFd;AAGH,GALD;;AAOA,QAAMF,aAAa,GAAIG,KAAD,IAAW;AAC7BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAFD;;AAIA,QAAME,aAAa,GAAGd,OAAO,GAAGL,OAAH,GAAa,IAA1C;AACA,QAAMoB,WAAW,GAAGd,KAAK,GAAGL,YAAH,GAAkB,IAA3C;AACA,QAAMoB,aAAa,GAAGD,WAAW,IAAID,aAAf,IAAgCG,YAAtD;AAEA,sBACI;AAAA,cACKD,aAAa,CAAClB,SAAD;AADlB,mBADJ;AAMH,CAjCD;;GAAMD,mB;UAGqDH,gB;;;KAHrDG,mB;AAmCN,eAAeA,mBAAf","sourcesContent":["import { useState, useEffect } from 'react';\n// import { Link, useParams } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './singleComicPage.scss';\n\nconst SingleCharacterPage = () => {\n\n    const [character, setCharacter] = useState({});\n    const {loading, error, getCharacterById, clearError} = useMarvelService();\n    // const {comicId} = useParams();\n\n    useEffect(() => {\n        updateComic();\n    }, [comicId]);\n\n    \n\n    const updateComic = () => {\n        clearError();\n        getComicById(comicId)\n        .then(resp => onComicLoaded(resp))\n        .catch(e => {});\n    }\n\n    const onComicLoaded = (comic) => {\n        setComic(comic)\n    }\n\n    const statusLoading = loading ? Spinner : null;\n    const statusError = error ? ErrorMessage : null;\n    const currentStatus = statusError || statusLoading || ComicService;\n\n    return (\n        <>\n            {currentStatus(character)}\n        </>\n    )\n\n}\n\nexport default SingleCharacterPage;"]},"metadata":{},"sourceType":"module"}