{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useHttp } from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n  _s();\n\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=bd35b0eefb6ce288f155f735ed56a8d6';\n\n  const getAllCharacters = async offset => {\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getAllComics = async offset => {\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformComic);\n  };\n\n  const getCharacterById = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getComicById = async id => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComic(res.data.results[0]);\n  };\n\n  const _transformCharacter = ({\n    name,\n    description,\n    thumbnail,\n    urls,\n    id,\n    comics\n  }) => {\n    const onEmptyMessage = 'Sorry, description for this character was not added yet';\n    const checkDescription = !description ? onEmptyMessage : `${description.length > 211 ? description.slice(0, 211) + '…' : description}`;\n    const thumbnailCoverStatus = thumbnail.path.includes('image_not_available') ? ' _not-found' : '';\n    return {\n      name: name,\n      description: checkDescription,\n      thumbnail: `${thumbnail.path}.${thumbnail.extension}`,\n      homepage: urls[0].url,\n      wiki: urls[1].url,\n      thumbnailCoverStatus: thumbnailCoverStatus,\n      id: id,\n      comicsName: comics.items.slice(0, 10),\n      comicsId: comics.resourceURI\n    };\n  };\n\n  const _transformComic = ({\n    title,\n    prices,\n    urls,\n    thumbnail,\n    id,\n    description,\n    pageCount,\n    textObjects\n  }) => {\n    const checkPrice = prices[0].price > 0 ? `${prices[0].price}$` : 'NOT AVAILABLE';\n    const onEmptyMessage = 'Sorry, description for this character was not added yet';\n    const checkDescription = !description ? onEmptyMessage : `${description.length > 811 ? description.slice(0, 811) + '…' : description}`;\n    return {\n      title: title,\n      price: checkPrice,\n      urls: urls[0].url,\n      thumbnail: `${thumbnail.path}.${thumbnail.extension}`,\n      id: id,\n      description: checkDescription,\n      pageCount: pageCount || 'No information about the number of pages',\n      language: textObjects.language || 'En-Us'\n    };\n  };\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacterById,\n    getAllComics,\n    getComicById,\n    clearError\n  };\n};\n\n_s(useMarvelService, \"9hyEhuOfcolEaHPbDIyQe2OeeLY=\", false, function () {\n  return [useHttp];\n});\n\nexport default useMarvelService;","map":{"version":3,"sources":["/Users/denisskidan/Documents/work/visual_code_stuff/React-projects/marvel-app/my-app/src/services/MarvelService.js"],"names":["useHttp","useMarvelService","loading","request","error","clearError","_apiBase","_apiKey","getAllCharacters","offset","res","data","results","map","_transformCharacter","getAllComics","_transformComic","getCharacterById","id","getComicById","name","description","thumbnail","urls","comics","onEmptyMessage","checkDescription","length","slice","thumbnailCoverStatus","path","includes","extension","homepage","url","wiki","comicsName","items","comicsId","resourceURI","title","prices","pageCount","textObjects","checkPrice","price","language"],"mappings":"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","sourcesContent":["import {useHttp} from '../hooks/http.hook';\n\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=bd35b0eefb6ce288f155f735ed56a8d6';\n\n    const getAllCharacters = async (offset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getAllComics = async (offset) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComic)\n    }\n\n    const getCharacterById = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getComicById = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComic(res.data.results[0]);\n    }\n\n    const _transformCharacter = ({name, description, thumbnail, urls, id, comics}) => {\n        const onEmptyMessage = 'Sorry, description for this character was not added yet';\n        const checkDescription = !description ? onEmptyMessage :\n            `${description.length > 211 ? description.slice(0, 211) + '…' :description}`\n        const thumbnailCoverStatus = thumbnail.path.includes('image_not_available') ?\n            ' _not-found' : ''; \n\n        return {\n            name: name,\n            description: checkDescription,\n            thumbnail: `${thumbnail.path}.${thumbnail.extension}`,\n            homepage: urls[0].url,\n            wiki: urls[1].url,\n            thumbnailCoverStatus: thumbnailCoverStatus, \n            id: id,\n            comicsName: comics.items.slice(0, 10),\n            comicsId: comics.resourceURI\n        }\n    }\n\n    const _transformComic = ({title, prices, urls, thumbnail, id, description, pageCount, textObjects}) => {\n        const checkPrice = prices[0].price > 0 ? `${prices[0].price}$` : 'NOT AVAILABLE';\n        const onEmptyMessage = 'Sorry, description for this character was not added yet';\n        const checkDescription = !description ? onEmptyMessage :\n            `${description.length > 811 ? description.slice(0, 811) + '…' : description}`\n\n        return {\n            title: title,\n            price: checkPrice,\n            urls: urls[0].url,\n            thumbnail: `${thumbnail.path}.${thumbnail.extension}`,\n            id: id,\n            description: checkDescription,\n            pageCount: pageCount || 'No information about the number of pages',\n            language: textObjects.language || 'En-Us'\n        }\n    }\n\n    return {loading, error, getAllCharacters, getCharacterById, getAllComics, getComicById, clearError};\n}\n\nexport default useMarvelService ;\n\n\n\n"]},"metadata":{},"sourceType":"module"}